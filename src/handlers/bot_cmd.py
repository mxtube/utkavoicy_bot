from loguru import logger

from sqlalchemy.ext.asyncio import AsyncSession
from models.user import User
from models.bug_report import BugReport
from forms import BugReportForm

from aiogram import Router, types
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext

command_router = Router(name='Bot commands')


@command_router.message(CommandStart())
async def start(message: types.Message, session: AsyncSession):
    logger.info(f'User {message.from_user.username} send command {message.text}')
    answer_message = f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} {message.from_user.last_name}\n–ü–æ–ª—É—á–∞–µ—Ç—Å—è —ç—Ç–æ –±–æ—Ç ü¶Ü'
    await User.create_or_update(session, message.from_user.__dict__)
    await message.answer(answer_message)
    logger.info(f'Bot send to user message: {answer_message}')


@command_router.message(Command('help'))
async def help_cmd(message: types.Message):
    logger.info(f'User {message.from_user.username} send command {message.text}')
    answer_message = ('‚ñ∂Ô∏è –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–ø–æ–º—è–Ω—É—Ç—å –µ–≥–æ @ –≤ –Ω—É–∂–Ω–æ–π –±–µ—Å–µ–¥–µ –∏ –≤—ã–±—Ä–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ '
                      '—Å–æ–æ–±—â–µ–Ω–∏–µ.\n'
                      'üõ†Ô∏è –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ –≤—ã–∑–æ–≤–∏—Ç–µ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ –∫–æ–º–∞–Ω–¥—É /bug')
    await message.answer(answer_message)
    logger.info(f'Bot send to user message: {answer_message}')


@command_router.message(Command('bug'))
async def report_cmd(message: types.Message, state: FSMContext, session: AsyncSession) -> None:
    logger.info(f'User {message.from_user.username} send command {message.text}. Open bug form')
    user = await User.is_user_exists(session, message.from_user.id)
    if message.chat.type == 'private' and user:
        await state.set_state(BugReportForm.description)
        await message.answer('–û–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–æ –ø—Ä–æ–±–ª–µ–º—É —Å –∫–æ—Ç–æ—Ä–æ–π —Ç—ã —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è(-–∞—Å—å) –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –µ–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º')


@command_router.message(BugReportForm.description)
async def process_description(message: types.Message, state: FSMContext, session: AsyncSession) -> None:
    await state.update_data(description=message.text)
    logger.info(f'User {message.from_user.username} send notification about bug: {message.text}')
    await BugReport.create(session, message.from_user.id, message.text)
    await state.clear()
    await message.answer('–Ø –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª —Ç–≤–æ—ë –æ–±—Ä–∞—â–µ–Ω–∏–µ –∏ –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –µ–µ —Ä–µ—à–µ–Ω–∏–µ–º.')
    logger.info('Close bug form')
